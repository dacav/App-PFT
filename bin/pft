#!/usr/bin/perl
#
# Copyright 2014 - Giovanni Simoni
#
# This file is part of PFT.
#
# PFT is free software: you can redistribute it and/or modify it under the
# terms of the GNU General Public License as published by the Free
# Software Foundation, either version 3 of the License, or (at your
# option) any later version.
#
# PFT is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# for more details.
#
# You should have received a copy of the GNU General Public License along
# with PFT.  If not, see <http://www.gnu.org/licenses/>.
#

=head1 NAME

pft - Static blog and website manager

=head1 SYNOPSYS

pft <command> [options]

=head1 AVAILABLE COMMANDS

Here follows a list of available commands:

=over

=item * B<init>: Initialize a B<pft> site in the current directory;

=item * B<blog>: Create a new blog entry;

=item * B<page>: Create a new page;

=item * B<make>: Build the website;

=item * B<pub>: Publish on the Web;

=item * B<clean>: Clear built tree;

=item * B<tag>: Edit tag page;

=item * B<help>: Show usage manual.

=back

For options of a specific command I<cmd> use C<pft I<cmd> --help>

=cut

use strict;
use warnings;

use File::Basename qw/basename/;
BEGIN { $0 = basename $0 }

use Pod::Usage;
use File::Spec::Functions qw/catfile/;

use App::PFT::Struct::Conf qw/$CONF_FILENAME cfg_default cfg_load/;
use App::PFT::Util qw/findroot/;

use App::PFT::Cmd::Init;
use App::PFT::Cmd::Blog;
use App::PFT::Cmd::Page;
use App::PFT::Cmd::Make;
use App::PFT::Cmd::Publish;
use App::PFT::Cmd::Clean;
use App::PFT::Cmd::Tag;
use App::PFT::Cmd::Help;

use feature qw/say/;

my %COMMANDS = (
    init => \&App::PFT::Cmd::Init::main,
    blog => \&App::PFT::Cmd::Blog::main,
    page => \&App::PFT::Cmd::Page::main,
    make => \&App::PFT::Cmd::Make::main,
    pub => \&App::PFT::Cmd::Publish::main,
    clean => \&App::PFT::Cmd::Clean::main,
    tag => \&App::PFT::Cmd::Tag::main,
    help => \&App::PFT::Cmd::Help::main,
);

unless(@ARGV) {
    say 'Usage:';
    say "  $0 --help";
    say "  $0 $_ [options]" foreach keys %COMMANDS;
    exit 1;
}

my $command = shift @ARGV;

if ($command =~ /^-(?:-help|h)/) {
    pod2usage -exitval => 1, -verbose => 2;
}

# Help asked for subcommand? If so we can let it go even if there's no
# configuration available.
sub help_asked {
    for my $a (@ARGV) {
        return 1 if $a =~ /^-(?:h|-help)$/
    }
    return 0
}

if (my $root = findroot type=>'file', name=>$CONF_FILENAME) {
    cfg_load $root;
    chdir $root;
} elsif ($command ne 'init' && $command ne 'help' && !&help_asked) {
    say STDERR "Not a $0 site. Try running: $0 init";
    exit 1;
}

($COMMANDS{$command} || die "Unknown command $command")->();
