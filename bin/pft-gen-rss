#!/usr/bin/perl

use strict;
use warnings;
use utf8;
use v5.16;

use Carp;
use Digest::MD5;
use HTML::Escape qw/escape_html/;
use PFT::Tree;
use POSIX qw/strftime/;

my $tree = eval{ PFT::Tree->new } || do {
    say STDERR $@ =~ s/ at.*$//rs;
    exit 2
};

my $conf = eval{ $tree->conf } || do {
    say STDERR 'Configuration error: ', $@ =~ s/ at.*$//rs;
    exit 3;
};

my $today_rfc822 = strftime "%a, %d %b %Y %H:%M:%S %z", localtime;
my $digest = Digest::MD5->new;

## TODO: add config?
my $site_title = $conf->{site}{title};
my $chan_description = "Latest news from $site_title";
my $site_url = $conf->{site}{url};
my $rss_url = "$site_url/rss.xml";  # TODO

sub node_to_href {
    my($cur_node, $other_node) = @_;

    confess unless $other_node;

    join '/', $site_url, do {
        my $hdr = $other_node->header;
        my $k = $other_node->content_type;

        if ($k =~ /::Blog$/) {(
            'blog',
            sprintf('%04d-%02d', $hdr->date->y, $hdr->date->m),
            sprintf('%02d-%s.html', $hdr->date->d, $hdr->slug),
        )} elsif ($k =~ /::Month$/) {(
            'blog',
            sprintf('%04d-%02d.html', $hdr->date->y, $hdr->date->m),
        )} elsif ($k =~ /::Page$/) {(
            'pages',
            $hdr->slug . '.html',
        )} elsif ($k =~ /::Tag$/) {(
            'tags',
            $hdr->slug . '.html',
        )} elsif ($k =~ /::Picture$/) {(
            'pics',
            $other_node->content->relpath
        )} elsif ($k =~ /::Attachment$/) {(
            'attachments',
            $other_node->content->relpath
        )} else { die $k }
    }
}

print <<"END";
<?xml version="1.0" encoding="$conf->{site}{encoding}"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
 <channel>
  <title>$site_title</title>
  <link>$site_url</link>
  <lastBuildDate>$today_rfc822</lastBuildDate>
  <generator>App::PFT</generator>
  <description>$chan_description</description>
  <atom:link href="$rss_url" rel="self" type="application/rss+xml"/>
END

foreach my $node ($tree->content_map->blog_recent(10)) {
    my $guid;
    my $pubDate;

    $digest->add($node->title);
    $guid = $digest->hexdigest;
    $digest->reset;

    $pubDate = do {
        my($y, $m, $d) = @{$node->date};
        strftime("%a, %d %b %Y %H:%M:%S %z", 0, 0, 0, $d, $m, $y - 1900)
    };

    my $content = escape_html $node->html(sub { node_to_href($node, shift) });

    say '    <item>';
    say '     <title>', $node->title, '</title>';
    say '     <guid isPermaLink="false">', $guid, '</guid>';
    say '     <pubDate>', $pubDate, '</pubDate>';
    say '     <description>', $content, '</description>';
    say '    </item>'
}

print <<END;
 </channel>
</rss>
END
